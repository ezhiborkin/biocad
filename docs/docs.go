// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/errorsdata": {
            "get": {
                "description": "Get errors data based on filename with pagination",
                "produces": [
                    "application/json"
                ],
                "summary": "Get errors data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File name to filter errors",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to show per page (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/er.ErrorOpenFile"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/processeddata": {
            "get": {
                "description": "Get processed data based on unit GUID with pagination",
                "produces": [
                    "application/json"
                ],
                "summary": "Get processed data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit GUID to filter processed data",
                        "name": "unit_guid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to show per page (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/unit.Unit"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/processedfiles": {
            "get": {
                "description": "Get processed files with pagination",
                "produces": [
                    "application/json"
                ],
                "summary": "Get processed files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to show per page (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/unit.ProcessedFile"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "er.ErrorOpenFile": {
            "type": "object",
            "properties": {
                "error": {},
                "filename": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "er.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "unit.ProcessedFile": {
            "type": "object",
            "properties": {
                "filepath": {
                    "type": "string"
                }
            }
        },
        "unit.Unit": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "bit": {},
                "block": {},
                "class": {
                    "type": "string"
                },
                "context": {},
                "invertbit": {},
                "invid": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "messageid": {
                    "type": "string"
                },
                "mqtt": {},
                "number": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type_": {},
                "unitguid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "File Parser API",
	Description:      "API Server for parsing files and getting data from MongoDB",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
