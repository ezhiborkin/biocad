{
    "swagger": "2.0",
    "info": {
        "description": "API Server for parsing files and getting data from MongoDB",
        "title": "File Parser API",
        "contact": {
            "name": "Evgenii Zhiborkin",
            "url": "https://t.me/zyltrcuj",
            "email": "zhiborkin_ei@mail.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/errorsdata": {
            "get": {
                "description": "Get errors data based on filename with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APIs"
                ],
                "summary": "Get errors data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File name to filter errors",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to show per page (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/er.ErrorOpenFile"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.errorResponse"
                        }
                    }
                }
            }
        },
        "/processeddata": {
            "get": {
                "description": "Get processed data based on unit GUID with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APIs"
                ],
                "summary": "Get processed data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit GUID to filter processed data",
                        "name": "unit_guid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to show per page (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/unit.Unit"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.errorResponse"
                        }
                    }
                }
            }
        },
        "/processedfiles": {
            "get": {
                "description": "Get processed files with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APIs"
                ],
                "summary": "Get processed files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to show per page (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/unit.ProcessedFile"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "er.ErrorOpenFile": {
            "description": "Error parsing file info with filename, error and time",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error"
                },
                "filename": {
                    "description": "File name",
                    "type": "string"
                },
                "time": {
                    "description": "Time",
                    "type": "string"
                }
            }
        },
        "er.errorResponse": {
            "description": "Error response",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Error message",
                    "type": "string"
                }
            }
        },
        "unit.ProcessedFile": {
            "description": "Processed file info",
            "type": "object",
            "properties": {
                "filepath": {
                    "description": "File path",
                    "type": "string"
                }
            }
        },
        "unit.Unit": {
            "description": "Unit info with number, mqtt, invid, unitguid, with messageid, text, context, class, with level, area, addr, block, with type_, bit, invertbit",
            "type": "object",
            "properties": {
                "addr": {
                    "description": "Addr",
                    "type": "string"
                },
                "area": {
                    "description": "Area",
                    "type": "string"
                },
                "bit": {
                    "description": "Bit"
                },
                "block": {
                    "description": "Block"
                },
                "class": {
                    "description": "Class",
                    "type": "string"
                },
                "context": {
                    "description": "Context"
                },
                "invertbit": {
                    "description": "Invert bit"
                },
                "invid": {
                    "description": "Invid",
                    "type": "string"
                },
                "level": {
                    "description": "Level",
                    "type": "string"
                },
                "messageid": {
                    "description": "Message ID",
                    "type": "string"
                },
                "mqtt": {
                    "description": "MQTT"
                },
                "number": {
                    "description": "Unit number",
                    "type": "string"
                },
                "text": {
                    "description": "Text",
                    "type": "string"
                },
                "type_": {
                    "description": "Type"
                },
                "unitguid": {
                    "description": "Unit GUID",
                    "type": "string"
                }
            }
        }
    }
}